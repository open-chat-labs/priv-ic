import "../../../libraries/types/can.did";

type ProfileArgs =
    record {
    };

type ProfileResponse =
    variant {
        Success: ProfileSuccessResult;
        NotFound;
    };

type ProfileSuccessResult =
    record {
        identity: Identity;
        apps: vec App;
    };

type VisibleProfileFieldsArgs =
    record {
        app_domain_name: text;
    };

type VisibleProfileFieldsResponse =
    variant {
        Success: VisibleProfileFieldsSuccessResult;
        NotFound;
    };

type VisibleProfileFieldsSuccessResult =
    record {
        fields: vec FieldId;
    };

type AppProfileViewArgs =
    record {
    };

type AppProfileViewResponse =
    variant {
        Success: AppProfileViewSuccessResult;
        NotFound;
    };

type AppProfileViewSuccessResult =
    record {
        email: AppEmailFacet;
        phone: AppPhoneFacet;
    };

type SetVisibleProfileFieldsArgs =
    record {
        app_domain_name: text;
        fields: vec FieldId;
    };

type SetVisibleProfileFieldsResponse =
    variant {
    };

type RegisterPhoneNumberArgs =
    record {
        phone_number: PhoneNumber;        
    };

type RegisterPhoneNumberResponse =
    variant {
        Success: RegisterPhoneNumberSuccessResult;
        AlreadyRegistered;
        InvalidPhoneNumber;
    };

type RegisterPhoneNumberSuccessResult
    record {
        field_id: FieldId;
    };

type RegisterEmailArgs =
    record {
        email_address: text;
    };

type RegisterEmailResponse =
    variant {
        Success: RegisterEmailAddressSuccessResult;
        AlreadyRegistered;
        InvalidEmailAddress;
    };

type RegisterEmailAddressSuccessResult
    record {
        field_id: FieldId;
    };

type SendVerificationCodeArgs =
    record {
        field_id: FieldId;
    };

type SendVerificationCodeResponse =
    variant {
        Success;
        AlreadySent;
        NotFound;
    };

type ConfirmVerificationCodeArgs =
    record {
        field_id: FieldId;
        verification_code: text;
    };

type ConfirmVerificationCodeResponse =
    variant {
        Success;
        ConfirmationCodeIncorrect;
        ConfirmationCodeExpired;
        AlreadyConfirmed;
        NotSent;
        NotFound;
    };

type VerificationCodesArgs =
    record {
        from_index: nat64;
    };

type VerificationCodesResponse =
    variant {
        Success(VerificationCodesSuccessResult);
        NotAuthorized;
    };

type VerificationCodesSuccessResult =
    record {
        verification_codes: vec VerificationCode;
    };

type RemoveVerificationCodesArgs =
    record {
        up_to_index: nat64;
    };

type RemoveVerificationCodesResponse =
    variant {
        Success;
        NotAuthorized;
    };

type InitArgs = 
    record {
        verification_code_sender_principals: vec principal;
    };

service: (InitArgs) -> {
    // Your full profile as seen when on the identity app directly
    profile: (ProfileArgs) -> (ProfileResponse) query;

    // A view of the profile for the given app
    visible_profile_fields: (VisibleProfileFieldsArgs) -> (VisibleProfileFieldsResponse) query;

    // Called by an app to get the view of the profile visible to the app
    app_profile_view: (AppProfileViewArgs) -> (AppProfileViewResponse) query;

    // Set the list of fields to which you grant the given app access
    set_visible_profile_fields: (SetVisibleProfileFieldsArgs) -> (SetVisibleProfileFieldsResponse);

    register_phone_number: (RegisterPhoneNumberArgs) -> (RegisterPhoneNumberResponse);
    register_email: (RegisterEmailArgs) -> (RegisterEmailResponse);

    send_verification_code: (SendVerificationCodeArgs) -> (SendVerificationCodeResponse);
    confirm_verification_code: (ConfirmVerificationCodeArgs) -> (ConfirmVerificationCodeResponse);

    //// Verification code sender
    ext_verification_codes: (VerificationCodesArgs) -> (VerificationCodesResponse);
    ext_remove_verification_codes: (RemoveVerificationCodesArgs) -> (RemoveVerificationCodesResponse);
}